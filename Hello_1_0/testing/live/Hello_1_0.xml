<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="Hello_1_0" soapui-version="2.0.2" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="ProjectSettings@projectRoot">C:\Souvik\LIVEArtifacts\platformsanitytestpacks\alsb\BusinessServices</con:setting>
  </con:settings>
  <con:interface name="HelloBinding" bindingName="{http://soa.o2.co.uk/helloservice_1}HelloBinding" soapVersion="1_1" definition="http://localhost:2222/services/Hello_1_0?wsdl">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>http://localhost:2222/services/Hello_1_0</con:endpoint>
    </con:endpoints>
    <con:operation isOneWay="false" action="" name="testFault" bindingOperationName="testFault" inputName="testFault" outputName="testFaultResponse" receivesAttachments="false" sendsAttachments="false">
      <con:settings/>
    </con:operation>
    <con:operation isOneWay="false" action="" name="testHello" bindingOperationName="testHello" inputName="testHello" outputName="testHelloResponse" receivesAttachments="false" sendsAttachments="false">
      <con:settings/>
    </con:operation>
    <con:definitionCache rootPart="http://localhost:2222/services/Hello_1_0?wsdl" type="TEXT">
      <con:part>
        <con:url>http://localhost:2222/services/Hello_1_0?SCHEMA%2FNorthBoundInterfaces%2Fcoredata_1_1</con:url>
        <con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 (http://www.altova.com) by Kapil Gosain (THBS)-->
<xsd:schema targetNamespace="http://soa.o2.co.uk/coredata_1" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xcore="http://soa.o2.co.uk/coredata_1">
  <xsd:complexType name="SOAFaultType">
    <xsd:annotation>
      <xsd:documentation>The type of the response sent to the calling application, if something goes wrong.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="xcore:SOAFaultOriginator"/>
      <xsd:element ref="xcore:SOAFaultCode"/>
      <xsd:element name="faultDescription" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>A human readable description of the error.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="faultTrace" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>A computer generated dump of the fault (may help in debugging problems).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="xcore:SOATransactionID" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SOAFault" type="xcore:SOAFaultType">
    <xsd:annotation>
      <xsd:documentation>The response sent to the calling application, if something goes wrong.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SOAFaultCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>A numeric representation of a fault (should be included in errors.xml).</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SOAFaultOriginator" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>A representation of where a fault originates (should be included in errors.xml).</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SOATransactionID" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>The transaction ID generated by the ESB.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SOAConsumerTransactionID" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>A transaction ID supplied by the calling aplication. It will not be processed but is passed through and logged by all underlying services (aids in debugging problems).</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:simpleType name="msisdnType">
    <xsd:annotation>
      <xsd:documentation>Mobile Phone numbers (MSISDNs) should always be defined as strings, including country codes i.e. "447734123456"; and translated into localised formats on the presentation and backend layers.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="billingAccountNumberType">
    <xsd:annotation>
      <xsd:documentation>A billing account, as it appears in the back end billing system (Companion).</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="6"/>
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="portalIDType">
    <xsd:annotation>
      <xsd:documentation>A portal account, normally in the form "john.smith@o2.co.uk".</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:complexType name="accountType">
    <xsd:annotation>
      <xsd:documentation>Data type to define a customers account. This could be either a portal account, msisdn, or a companion account and msisdn. Or a Bank Account program ID and account ID (initially for Timberlake)</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element name="portalID" type="xcore:portalIDType">
        <xsd:annotation>
          <xsd:documentation>A portal account, normally in the form "john.smith@o2.co.uk".</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="msisdn" type="xcore:msisdnType">
        <xsd:annotation>
          <xsd:documentation>A msisdn, in international format i.e. "447712345678"</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="accountDetail" type="xcore:accountDetail">
        <xsd:annotation>
          <xsd:documentation>Account Details</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="accountDetail">
    <xsd:annotation>
      <xsd:documentation>Account Details</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="billingAccountType">
        <xsd:annotation>
          <xsd:documentation>The type of account as it is defined in the billing system (only "MOBILE" currently defined).</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="MOBILE"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="accountNumber" type="xcore:billingAccountNumberType">
        <xsd:annotation>
          <xsd:documentation>The companion account.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="msisdn" type="xcore:msisdnType">
        <xsd:annotation>
          <xsd:documentation>The msisdn within the above account.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="customerIDType">
    <xsd:annotation>
      <xsd:documentation>Main customerID for online services - this is the o2BFid in CPDS at the moment</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:complexType name="cashCardAccountType">
    <xsd:annotation>
      <xsd:documentation>Uniquely identifies the account in the Prepaid Banking system that is being referred to.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:annotation>
        <xsd:documentation>Financial accounts need a programID and accountID (Ref: Timberlake)</xsd:documentation>
      </xsd:annotation>
      <xsd:element name="programID" type="xsd:long">
        <xsd:annotation>
          <xsd:documentation>Identifies program. Translates into "Smart" or "Freedom" with various limits</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="accountID" type="xsd:long">
        <xsd:annotation>
          <xsd:documentation>Unique internal account ID on the TSYS platform. Probably can be applied to other banking systems as well.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="userID" type="xsd:long" minOccurs="0"/>
      <xsd:element name="cardID" type="xsd:long" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="productIDType">
    <xsd:annotation>
      <xsd:documentation>Identifies a product - temporarily the same as o2BFID (and hence customer ID)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="customerRoleType">
    <xsd:annotation>
      <xsd:documentation>The role concept from registration DB or A and R</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="admin"/>
      <xsd:enumeration value="user"/>
      <xsd:enumeration value="chooser"/>
      <xsd:enumeration value="superuser"/>
      <xsd:enumeration value="unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="imsiType">
    <xsd:annotation>
      <xsd:documentation>IMSI Number</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="imeiType">
    <xsd:annotation>
      <xsd:documentation>IMEI Number</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:element name="subscriberProfile" type="xcore:SubscriberProfileType">
    <xsd:annotation>
      <xsd:documentation>Subscriber Profile Element</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="SubscriberProfileType">
    <xsd:annotation>
      <xsd:documentation>Complex Type that defines Subscriber Profile</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="xcore:SubscriberID">
        <xsd:annotation>
          <xsd:documentation>This refers to the MSISDN for Mobile subscribers</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="xcore:Operator" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Operator ID for the particular subscriber</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="xcore:PaymentCategory" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Type of payment, Prepay of Postpay</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="xcore:Segment" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Segment of Subscriber, corporate, consumer, ISP etc.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="channel" type="xsd:string" minOccurs="0"/>
      <xsd:element name="ServiceProviderID" type="xsd:long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>SPID which is a unique value for the type of O2 Service Provider like Tesco, CPW etc.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Status" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Operator" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>O2 UK, Tesco or Other normally</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Segment" type="xcore:SegmentType">
    <xsd:annotation>
      <xsd:documentation>The P and L definition of Consumer/SME/Corp</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:simpleType name="SegmentType">
    <xsd:annotation>
      <xsd:documentation>main ones listed - could be others</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Consumer"/>
      <xsd:enumeration value="SME"/>
      <xsd:enumeration value="Corporate"/>
      <xsd:enumeration value="ISP"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name="Channel" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>The sales channel that owns the subscriber</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SubscriberID" type="xcore:msisdnType">
    <xsd:annotation>
      <xsd:documentation>Subscriber ID that is unique identifier of the subscriber eg: MSISDN no is subscriberID for Mobile users</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="PaymentCategory" type="xcore:PaymentCategoryType">
    <xsd:annotation>
      <xsd:documentation>Divides between pay and go/pay monthly</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:simpleType name="PaymentCategoryType">
    <xsd:annotation>
      <xsd:documentation>two values postpay or prepay</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Prepay"/>
      <xsd:enumeration value="Postpay"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="ServiceResultType">
    <xsd:annotation>
      <xsd:documentation>This data type represents the status recieved from a service for a task that might be earlier assigned to that service.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="statusCode" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>A unique code assigned to the status from the service. A set of status codes can be defined for services based on the context.
				                   A stausCode will be suffixed with "S" for success, "F" for failure and "E" for Error and "P" for Pending to describe the type of status recieved from service.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="externalDescription" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>A description of status in human-readble form that has to be sent to the end-user.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="internalDescription" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>This is an optional description of the status which is meant for logging purpose. This may contain the java stack trace or Database error trace based on the context.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MapItem">
    <xsd:annotation>
      <xsd:documentation>An individual Item that carries key-value pair for extensible properties</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="key" type="xsd:string"/>
      <xsd:choice>
        <xsd:annotation>
          <xsd:documentation>Only the relevant elemt is populated based on the type of the parameter.</xsd:documentation>
        </xsd:annotation>
        <xsd:element name="intValue" type="xsd:integer"/>
        <xsd:element name="strValue" type="xsd:string"/>
        <xsd:element name="boolValue" type="xsd:boolean"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MapType">
    <xsd:annotation>
      <xsd:documentation>A generic extensible complex type that can be used to send multiple name-value pairs</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="mapItem" type="xcore:MapItem" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="StatusCodeType">
    <xsd:annotation>
      <xsd:documentation>This is borrowed from SPML definition of a status code - the pending status is  a bit debatable</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="success"/>
      <xsd:enumeration value="failure"/>
      <xsd:enumeration value="error"/>
      <xsd:enumeration value="pending"/>
      <xsd:enumeration value="expired"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name="applicationID" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>applicationID is part of request identifier handled by SOA Access Gateway. Application ID uniquely identifies the name of consuming application. Example - DASHB, IVR, WAP, etc</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="providerID" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>providerID is also part of request identifier handled by SOA Access Gateway. Provider ID identifies the company that provides a functionality to end customers by invoking this specific service. Example - O2, Tesco, Car Phone Warehouse</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="originatorIP" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>This parameter indicates the IP address of the originating system. This parameter will be added by the SOA Access Gateway</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:simpleType name="mobileAccessIdType">
    <xsd:annotation>
      <xsd:documentation>Mobile Access Id is Hash id which is same as the UID generated by Wap Gateway</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:element name="debugFlag" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>This parameter indicates whether we should log or not, Used for debugging perspective from a Support Perspective.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
</xsd:schema>]]></con:content>
        <con:type>http://www.w3.org/2001/XMLSchema</con:type>
      </con:part>
      <con:part>
        <con:url>http://localhost:2222/services/Hello_1_0?SCHEMA%2FNorthBoundInterfaces%2Fhellodata_1_0</con:url>
        <con:content><![CDATA[<xsd:schema targetNamespace="http://soa.o2.co.uk/hellodata_1" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xcore="http://soa.o2.co.uk/coredata_1" xmlns:xhd="http://soa.o2.co.uk/hellodata_1">
  <xsd:import namespace="http://soa.o2.co.uk/coredata_1" schemaLocation="http://localhost:2222/services/Hello_1_0?SCHEMA%2FNorthBoundInterfaces%2Fcoredata_1_1"/>
  <xsd:element name="testHello" type="xhd:testHello">
    <xsd:annotation>
      <xsd:documentation>Hello Request</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="testFault" type="xhd:testHello">
    <xsd:annotation>
      <xsd:documentation>Hello Test</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="testHello">
    <xsd:annotation>
      <xsd:documentation>Hello Test</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="testHelloResponse" type="xhd:testHelloResponse">
    <xsd:annotation>
      <xsd:documentation>Hello Test Response</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="testFaultResponse" type="xhd:testHelloResponse">
    <xsd:annotation>
      <xsd:documentation>Test Fault Response</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="testHelloResponse">
    <xsd:annotation>
      <xsd:documentation>Hello Test Response</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="message" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="testHelloFault" type="xcore:SOAFaultType">
    <xsd:annotation>
      <xsd:documentation>Test Hello Fault</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="testFaultFault" type="xcore:SOAFaultType">
    <xsd:annotation>
      <xsd:documentation>Test Fault Fault</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
</xsd:schema>]]></con:content>
        <con:type>http://www.w3.org/2001/XMLSchema</con:type>
      </con:part>
      <con:part>
        <con:url>http://localhost:2222/services/Hello_1_0?wsdl</con:url>
        <con:content><![CDATA[<s0:definitions name="Hello" targetNamespace="http://soa.o2.co.uk/helloservice_1" xmlns:s0="http://schemas.xmlsoap.org/wsdl/" xmlns:s1="http://soa.o2.co.uk/hellodata_1" xmlns:s2="http://soa.o2.co.uk/helloservice_1" xmlns:s3="http://schemas.xmlsoap.org/wsdl/soap/">
  <s0:types>
    <xsd:schema xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xhd="http://soa.o2.co.uk/hellodata_1" xmlns:xhs="http://soa.o2.co.uk/helloservice_1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:import namespace="http://soa.o2.co.uk/hellodata_1" schemaLocation="http://localhost:2222/services/Hello_1_0?SCHEMA%2FNorthBoundInterfaces%2Fhellodata_1_0"/>
    </xsd:schema>
  </s0:types>
  <s0:message name="testHello">
    <s0:part element="s1:testHello" name="testHello"/>
  </s0:message>
  <s0:message name="testHelloResponse">
    <s0:part element="s1:testHelloResponse" name="testHelloResponse"/>
  </s0:message>
  <s0:message name="testHelloFault">
    <s0:part element="s1:testHelloFault" name="testHelloFault"/>
  </s0:message>
  <s0:message name="testFault">
    <s0:part element="s1:testFault" name="testFault"/>
  </s0:message>
  <s0:message name="testFaultResponse">
    <s0:part element="s1:testFaultResponse" name="testFaultResponse"/>
  </s0:message>
  <s0:message name="testFaultFault">
    <s0:part element="s1:testFaultFault" name="testFaultFault"/>
  </s0:message>
  <s0:portType name="HelloPort">
    <s0:operation name="testHello">
      <s0:input message="s2:testHello" name="testHello"/>
      <s0:output message="s2:testHelloResponse" name="testHelloResponse"/>
      <s0:fault message="s2:testHelloFault" name="testHelloFault"/>
    </s0:operation>
    <s0:operation name="testFault">
      <s0:input message="s2:testFault" name="testFault"/>
      <s0:output message="s2:testFaultResponse" name="testFaultResponse"/>
      <s0:fault message="s2:testFaultFault" name="testFaultFault"/>
    </s0:operation>
  </s0:portType>
  <s0:binding name="HelloBinding" type="s2:HelloPort">
    <s3:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <s0:operation name="testHello">
      <s3:operation soapAction=""/>
      <s0:input name="testHello">
        <s3:body parts="testHello" use="literal"/>
      </s0:input>
      <s0:output name="testHelloResponse">
        <s3:body parts="testHelloResponse" use="literal"/>
      </s0:output>
      <s0:fault name="testHelloFault">
        <s3:fault name="testHelloFault" use="literal"/>
      </s0:fault>
    </s0:operation>
    <s0:operation name="testFault">
      <s3:operation soapAction=""/>
      <s0:input name="testFault">
        <s3:body parts="testFault" use="literal"/>
      </s0:input>
      <s0:output name="testFaultResponse">
        <s3:body parts="testFaultResponse" use="literal"/>
      </s0:output>
      <s0:fault name="testFaultFault">
        <s3:fault name="testFaultFault" use="literal"/>
      </s0:fault>
    </s0:operation>
  </s0:binding>
  <s0:service name="HelloService">
    <s0:port binding="s2:HelloBinding" name="HelloPort">
      <s3:address location="http://argon:8080/services/Hello_1_0"/>
    </s0:port>
  </s0:service>
</s0:definitions>]]></con:content>
        <con:type>http://schemas.xmlsoap.org/wsdl/</con:type>
      </con:part>
    </con:definitionCache>
  </con:interface>
  <con:testSuite name="Hello_1_0 Test Suite">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Success Case" searchProperties="true" id="1d2e520a-45b0-4c71-9630-adea62eb4158">
      <con:settings/>
      <con:testStep type="request" name="Succes Case">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>HelloBinding</con:interface>
          <con:operation>testHello</con:operation>
          <con:request name="Succes Case" outgoingWss="" incomingWss="">
            <con:settings/>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:2222/services/Hello_1_0</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:hel="http://soa.o2.co.uk/hellodata_1">
   <soap:Header xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cor="http://soa.o2.co.uk/coredata_1">
      <cor:applicationID>sf_support</cor:applicationID>
      <cor:providerID>o2</cor:providerID>
      <cor:originatorIP>127.0.0.1</cor:originatorIP>
   </soap:Header>
   <soapenv:Body>
      <hel:testHello>
         <hel:name>NAME</hel:name>
      </hel:testHello>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:assertion type="Simple Contains">
              <con:configuration>
                <token>Hello</token>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
            </con:credentials>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Fault  Case" searchProperties="true" id="0d0b01e8-8caa-4ada-adff-3bcbf2a3c4c1">
      <con:settings/>
      <con:testStep type="request" name="Fault Case">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>HelloBinding</con:interface>
          <con:operation>testFault</con:operation>
          <con:request name="Fault Case" outgoingWss="" incomingWss="">
            <con:settings/>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:2222/services/Hello_1_0</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:hel="http://soa.o2.co.uk/hellodata_1">
   <soap:Header xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cor="http://soa.o2.co.uk/coredata_1">
      <cor:applicationID>sf_support</cor:applicationID>
      <cor:providerID>o2</cor:providerID>
      <cor:originatorIP>127.0.0.1</cor:originatorIP>
   </soap:Header>
   <soapenv:Body>
      <hel:testFault>
         <hel:name>Souvik</hel:name>
      </hel:testFault>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Not SOAP Fault Assertion"/>
            <con:assertion type="XQuery Match">
              <con:configuration>
                <path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
declare namespace hel='http://soa.o2.co.uk/hellodata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace cor='http://soa.o2.co.uk/coredata_1';
//cor:SOAFaultCode/text()</path>
                <content>&lt;xml-fragment>100&lt;/xml-fragment></content>
                <allowWildcards>false</allowWildcards>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
            </con:credentials>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:properties/>
  </con:testSuite>
  <con:properties/>
  <con:wssContainer/>
</con:soapui-project>